# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).
#
# Examples:
#
#   cities = City.create([{ name: 'Chicago' }, { name: 'Copenhagen' }])
#   Mayor.create(name: 'Emanuel', city: cities.first)

Course.create([
  {name: "CSE 3. Fluency in Information Technology (4)", description: "Introduces the concepts and skills necessary to effectively use information technology. Includes basic concepts and some practical skills with computer and networks. Prerequisites: none. ", units: 4, acronym: 'CSE', number: '3'},
{name: "CSE 4GS. Mathematical Beauty in Rome (4)", description: "Exploration of topics in mathematics and engineering\n\t\t\t\t  as they relate to classical architecture in Rome, Italy. In\n\t\t\t\t  depth geometrical\n\t\t\t\t  analysis and computer modeling of basic structures (arches,\n\t\t\t\t  vaults, domes),\n\t\t\t\t  and on-site studies of the Colosseum, Pantheon, Roman Forum,\n\t\t\t\t  and St. Peter\u{2019}s Basilica. Prerequisites: Math\n\t\t\t\t  10A or Math 20A; departmental approval, and corequisite of\n\t\t\t\t  CSE 6GS.", units: 4, acronym: 'CSE', number: '4gs'},
{name: "CSE 6GS. Mathematical Beauty in Rome Lab (4)\t\t\t\t", description: "Companion course to CSE 4GS where theory is applied and lab experiments\n\t\t\t\t  are carried out \u{201c}in the field\u{201d} in Rome, Italy. For final projects,\n\t\t\t\t  students will select a complex structure (e.g., the Colosseum, the\n\t\t\t\t  Pantheon, St. Peter\u{2019}s, etc.) to analyze and model, in detail, using computer-based\n\t\t\t\t  tools. Prerequisites: Math 10A or Math 20B; departmental\n\t\t\t\t  approval, and corequisite of CSE 4GS.", units: 0, acronym: 'CSE', number: '6gs'},
{name: "CSE 5A. Introduction to Programming I (4)", description: "(Formerly CSE 62A) Introduction to algorithms and top-down problem solving. Introduction to the C language, including functions, arrays, and standard libraries. Basic skills for using a PC graphical user interface operating system environment. File maintenance utilities are covered. (A student may not receive credit for CSE 5A after receiving credit for CSE 10 or CSE 11 or CSE 8B or CSE 9B or CSE 62B or CSE 65.) Prerequisites: A familiarity with high-school level algebra is expected, but this course assumes no prior programming knowledge. ", units: 4, acronym: 'CSE', number: '5a'},
{name: "CSE 8A. Introduction to Computer Science: JAVA (3)", description: "Introductory computer science course designed\n\t\t\t\t  for students interested in computing.  No prior programming experience\n\t\t\t\t  is assumed. Learn fundamental concepts of applied computer science using\n\t\t\t\t  media computation. Must\n\t\t\t\t  be taken concurrently with CSE 8AL. CSE 8A is part of a three-track\n\t\t\t\t  course (CSE 8A, CSE 8AL, and CSE 8B) that is equivalent to\n\t\t\t\t  CSE 11. Students\n\t\t\t\t  should take CSE 8B to complete this track.  Students who have taken\n\t\t\t\t  CSE 8B or CSE 11 may not take CSE 8A. Recommended prep: High\n\t\t\t\t  school algebra and familiarity with computing concepts. Prerequisites: corequisite\n\t\t\t\t  of CSE 8AL.", units: 3, acronym: 'CSE', number: '8a'},
{name: "CSE 8AL. Introduction\n\t\t  to Computer Science: JAVA Lab (1)", description: "Exercises in the theory and practice of computer science under the supervision\n\t\t\t\t  of an instructor. Hands-on experience with designing, editing,\n\t\t\t\t  compiling, and executing programming constructs and applications.\n\t\t\t\t  Must be taken concurrently with CSE 8A.  CSE 8AL is part of a three-track\n\t\t\t\t  course (CSE 8A, CSE 8AL, and CSE 8B) that is equivalent to\n\t\t\t\t  CSE 11. Students should take CSE 8B to complete this track.\n\t\t\t\t  Students who have taken CSE 8B or CSE 11 may not take CSE 8AL. Recommended\n\t\t\t\t  prep: High school algebra and familiarity with computing concepts. Prerequisites: corequisite\n\t\t\t\t  of CSE 8A.", units: 1, acronym: 'CSE', number: '8al'},
{name: "CSE 8B. Introduction to Computer Science: Java B (4)", description: "Continuation of the Java language. Continuation of programming techniques.\n\t\t\t\t  More on inheritance. Exception handling. CSE 8A is part of a three-track\n\t\t\t\t  course (CSE 8A, CSE 8AL, and CSE 8B) that is equivalent to CSE 11. Students\n\t\t\t\t  who have taken CSE 11 may not take CSE 8B. Recommended prep: High school\n\t\t\t\t  algebra and familiarity with computing concepts or CSE 8A and CSE 8AL. ", units: 4, acronym: 'CSE', number: '8b'},
{name: "CSE 11. Introduction to Computer Science and Object-Oriented Programming: Java (4)", description: "An accelerated introduction to computer science and programming using the Java language. Basic UNIX. Modularity and abstraction. Documentation, testing and verification techniques. Basic object-oriented programming, including inheritance and dynamic binding. Exception handling. Event-driven and dynamic binding. Exception handling. Event-driven programming. Experience with AWT library or other similar library. Students who have completed CSE 8B may not take CSE 11. Recommended Prep: high-school algebra and familiarity with computing concepts and a course in a compiled language. Prerequisites: Minimum score of 4 on the AP Computer Science A exam.", units: 4, acronym: 'CSE', number: '11'},
{name: "CSE 12. Basic Data\n\t\t  Structures and Object-Oriented Design (4)", description: "Use and implementation of basic data structures including linked lists, stacks, and queues. Use of advanced structures such as binary trees and hash tables. Object-oriented design including interfaces, polymorphism, encapsulation, abstract data types, pre-/post-conditions. Recursion. Uses Java and Java Collections. Prerequisites: CSE 8B or CSE 11, and concurrent enrollment with CSE 15L. ", units: 4, acronym: 'CSE', number: '12'},
{name: "CSE 15L. Tools and Technique Laboratory (2)", description: "Hands-on exploration of software development\n\t\t\t\t  tools and techniques. Investigation of the scientific process\n\t\t\t\t  as applied to software development and debugging. Emphasis is on weekly\n\t\t\t\t  hands-on laboratory experiences, development of laboratory notebooking\n\t\t\t\t  techniques as applied to software design. Prerequisites: CSE\n\t\t\t    8B, or CSE 11. Concurrent enrollment with CSE 12. ", units: 2, acronym: 'CSE', number: '15l'},
{name: "CSE 20. Introduction to Discrete Mathematics (4)", description: "Basic discrete mathematical structure: sets, relations, functions, sequences, equivalence relations, partial orders, and number systems. Methods of reasoning and proofs: propositional logic, predicate logic, induction, recursion, and pigeonhole principle. Infinite sets and diagonalization. Basic counting techniques; permutation and combinations. Applications will be given to digital logic design, elementary number theory, design of programs, and proofs of program correctness. Credit not offered for both Math 15A and CSE 20. Equivalent to Math 15A. Prerequisites: CSE 8A or CSE 8B or CSE 11. CSE 8B or CSE 11 may be taken concurrently with CSE 20/ Math 15A. ", units: 4, acronym: 'CSE', number: '20'},
{name: "CSE 21. Mathematics for Algorithms and Systems (4)", description: "This course will provide an introduction to the discrete mathematical tools needed to analyze algorithms and systems. Enumerative combinatorics: basic counting principles, inclusion-exclusion, and generating functions. Matrix notation. Applied discrete probability. Finite automata. Credit not offered for both Math 15B and CSE 21. Equivalent to Math 15B. Prerequisites: CSE 20 or Math 15A. ", units: 4, acronym: 'CSE', number: '21'},
{name: "CSE 30. Computer\n\t\t  Organization and Systems Programming (4)", description: "Introduction to organization of modern digital\n\t\t\t\t  computers\u{2014}understanding the various components of a computer\n\t\t\t\t  and their interrelationships. Study of a specific architecture/machine\n\t\t\t\t  with emphasis on systems programming in C and Assembly languages in a UNIX\n\t\t\t\t  environment. Prerequisites: CSE\n\t\t\t    12, CSE 15L, or consent of instructor.  ", units: 4, acronym: 'CSE', number: '30'},
{name: "CSE 80. UNIX Lab (2)", description: "The objective of the course is to help the programmer create a productive UNIX environment. Topics include customizing the shell, file system, shell programming, process management, and UNIX tools. Prerequisites: CSE 8B or CSE 11. ", units: 2, acronym: 'CSE', number: '80'},
{name: "CSE 86. C++ for Java Programmers (2)", description: "Helps the Java programmer to be productive in the C++ programming environment. Topics include the similarities and differences between Java and C++ with special attention to pointers, operator overloading, templates, the STL, the preprocessor, and the C++ Runtime Environment. Prerequisites: CSE 12 or consent of instructor. ", units: 2, acronym: 'CSE', number: '86'},
{name: "CSE 87. Freshman Seminar (1)", description: "The Freshman Seminar Program is designed to provide new students with the opportunity to explore an intellectual topic with a faculty member in a small seminar setting. Freshman seminars are offered in all campus departments and undergraduate colleges, and topics vary from quarter to quarter. Enrollment is limited to fifteen to twenty students, with preference given to entering freshmen. Prerequisites: none. ", units: 1, acronym: 'CSE', number: '87'},
{name: "CSE 91. Perspectives\n\t\t  in Computer Science and Engineering (2)", description: "A seminar format discussion led by CSE faculty on topics in central areas of computer science, concentrating on the relation among them, recent developments, and future directions. Prerequisites: majors only. ", units: 2, acronym: 'CSE', number: '91'},
{name: "CSE 92. Reading and Writing in Computer Science (2)", description: "This course will improve students\u{2019} ability to read and write technical English and write software. Students will write short papers responding to a CSE-related book, learn the basics of functional programming, and do a project using a functional language.  Prerequisites: CSE 12. ", units: 2, acronym: 'CSE', number: '92'},
{name: "CSE 99. Independent\n\t\t  Study in Computer Science and Engineering (4)", description: "Independent reading or research by special arrangement with a faculty member. Prerequisites: lower-division standing. Completion of thirty units at UC San Diego with a UC San Diego GPA of 3.0. Special Studies form required. Department stamp required. Consent of instructor and approval of the department. ", units: 4, acronym: 'CSE', number: '99'},
{name: "CSE 100. Advanced Data Structures (4)", description: "High-performance data structures and supporting\n\t\t\t\t  algorithms. Use and implementation of data structures like (un)balanced\n\t\t\t\t  trees, graphs, priority queues, and hash tables. Also memory management,\n\t\t\t\t  pointers, recursion. Theoretical and practical performance analysis, both\n\t\t\t\t  average case and amortized. Uses C++ and STL. Credit not offered for both\n\t\t\t\t  Math 176 and CSE 100. Equivalent to Math 176. Prerequisites: CSE\n\t\t\t\t  21 or Math 15B or consent of instructor. ", units: 4, acronym: 'CSE', number: '100'},
{name: "CSE 101. Design and Analysis of Algorithms (4)", description: "Design and analysis of efficient algorithms with emphasis of nonnumerical algorithms such as sorting, searching, pattern matching, and graph and network algorithms. Measuring complexity of algorithms, time and storage. NP-complete problems. Credit not offered for both Math 188 and CSE 101. Equivalent to Math 188. Prerequisites: CSE 12, CSE 21 or Math 15B or Math 100A or Math 103A and CSE 100 or Math 176. Majors only. ", units: 4, acronym: 'CSE', number: '101'},
{name: "CSE 102. Storage System Architectures (4)", description: "Descriptive introduction to disk storage media, external data structures, and their algorithms. Disk drives, external sorting, index structures, disk arrays, reliability, data declustering, and video servers. Merge sort, B+trees and linear hashing, improved RAID data layout, and SID data layout. Prerequisites: CSE 100 or Math 176, CSE 120, CSE 123, or consent of the instructor. ", units: 4, acronym: 'CSE', number: '102'},
{name: "CSE 103. A Practical\n\t\t  Introduction to Probability and Statistics (4)", description: "Distributions over the real line. Independence, expectation, conditional expectation, mean, variance. Hypothesis testing. Learning classifiers. Distributions over R^n, covariance matrix. Binomial, Poisson distributions. Chernoff bound. Entropy. Compression. Arithmetic coding. Maximal likelihood estimation. Bayesian estimation. CSE 103 is not duplicate credit for ECE 109, ECON 120A, or Math 183. Prerequisites: Math 20A and Math 20B. ", units: 4, acronym: 'CSE', number: '103'},
{name: "CSE 105. Theory of Computability (4)", description: "An introduction to the mathematical theory of computability. Formal languages. Finite automata and regular expression. Push-down automata and context-free languages. Computable or recursive functions: Turing machines, the halting problem. Undecidability. Credit not offered for both Math 166 and CSE 105. Equivalent to Math 166. Prerequisites: CSE 12, CSE 21 or Math 15B or Math 100A or Math 103A. ", units: 4, acronym: 'CSE', number: '105'},
{name: "CSE 107. Introduction to Modern Cryptography (4)", description: "Topics include private and public-key cryptography, block ciphers, data encryption, authentication, key distribution and certification, pseudorandom number generators, design and analysis of protocols, zero-knowledge proofs, and advanced protocols. Emphasizes rigorous mathematical approach including formal definitions of security goals and proofs of protocol security. Prerequisites: CSE 21 or Math 15B, CSE 101 or Math 188, CSE 105 or Math 166. ", units: 4, acronym: 'CSE', number: '107'},
{name: "CSE 110. Software\n\t\t\t\t  Engineering (4)", description: "Introduction to software development and engineering methods,\n                  including specification, design, implementation, testing, and\n                  process. An emphasis on team development, agile methods, and\n                  use of tools such as IDE\u{2019}s, version control, and test harnesses.\n                  CSE 70 is renumbered to CSE 110: students may not receive credit\n                  for both CSE 70 and CSE 110. Prerequisites: CSE\n                  12, CSE 21, or Math 15B.", units: 4, acronym: 'CSE', number: '110'},
{name: "CSE 111. Object-Oriented Software Design (4)", description: "Introduction to object-oriented analysis and design. Object-oriented modeling methods for analysis and design, object-oriented general design paradigms, object-oriented design techniques. Cyclic development of object-oriented systems. Prerequisites: CSE 70 or CSE 110. ", units: 4, acronym: 'CSE', number: '111'},
{name: "CSE 112. Advanced Software Engineering (4)", description: "This course will cover software engineering\n\t\t\t\t  topics associated with large systems development such as requirements\n\t\t\t\t  and specifications, testing and maintenance, and design. Specific\n\t\t\t\t  attention will be given to development tools and automated\n\t\t\t\t  support environments. Prerequisites: CSE\n\t\t\t    111. ", units: 4, acronym: 'CSE', number: '112'},
{name: "CSE 118. Ubiquitous Computing (4)", description: "Explores emerging opportunities enabled by cheap sensors and networked computing devices. Small research projects will be conducted in teams, culminating in project presentations at the end of the term. Section will cover material relevant to the project, such as research methods, software engineering, teamwork, and project management. Prerequisites: any course from the following: CSE 131, CSE 132B, Cog Sci 102C, Cog Sci 121, Cog Sci 184, ECE 111, ECE 118, ECE 191, ECE 192, COMT 111B, COMT 115, or ICAM; or consent of instructor. ", units: 4, acronym: 'CSE', number: '118'},
{name: "CSE 120. Principles\n\t\t  of Computer Operating Systems (4)", description: "Basic functions of operating systems; basic kernel structure, concurrency, memory management, virtual memory, file systems, process scheduling, security and protection. Prerequisites: CSE 30, and CSE 101 or Math 188, and CSE 70 or CSE 110. ", units: 4, acronym: 'CSE', number: '120'},
{name: "CSE 121. Operating\n\t\t  Systems: Architecture and Implementation (4)", description: "(Formerly CSE 171B.) Case study of architecture and implementation of a selected modern operating system. In-depth analysis through a detailed study of source code. Topics include process creation, context-switching, memory allocation, synchronization mechanisms, interprocess communication, I/O buffering, device drivers, and file systems. Prerequisites: CSE 120. ", units: 4, acronym: 'CSE', number: '121'},
{name: "CSE 123. Computer Networks (4)", description: "(Renumbered from CSE 123A.) Introduction to concepts, principles, and practice of computer communication networks with examples from existing architectures, protocols, and standards with special emphasis on the Internet protocols. Layering and the OSI model; physical and data link layers; local and wide area networks; datagrams and virtual circuits; routing and congestion control; internetworking. Transport protocols. Credit may not be received for both CSE 123A and 158A or CSE 123B and 158B. Prerequisites: CSE 120 or consent of instructor. Majors only.", units: 4, acronym: 'CSE', number: '123'},
{name: "CSE 124. Networked Services (4)", description: "(Renumbered from CSE 123B.) The architecture of modern networked services, including data center design, enterprise storage, fault tolerance, and load balancing. Protocol software structuring, the Transmission Control Protocol (TCP), remote procedure calls, protocols for digital audio and video communication, overlay and peer-to-peer systems, secure communication. Credit may not be received for both CSE 124 and ECE 158B. Students may not receive credit for both CSE 123B and CSE 124. Prerequisites: CSE 120 or consent of instructor. Majors only.", units: 4, acronym: 'CSE', number: '124'},
{name: "CSE 125. Software\n\t\t  System Design and Implementation (4)", description: "Design and implementation of large, complex software systems involving multiple aspects of CSE curriculum. Emphasis is on software system design applied to a single, large group project with close interaction with instructor. Prerequisites: senior standing with substantial programming experience, and consent of instructor. Department stamp required.  ", units: 4, acronym: 'CSE', number: '125'},
{name: "CSE 127. Introduction to Computer Security (4)", description: "Topics include basic cryptography, security/threat analysis, access control, auditing, security models, distributed systems security, and theory behind common attack and defense techniques. The class will go over formal models as well as the bits and bytes of security exploits. Prerequisites: CSE 21 or Math 15B, and CSE 120. ", units: 4, acronym: 'CSE', number: '127'},
{name: "CSE 128. Concurrency (4)", description: "Specification of concurrent programs safety, liveness, and fairness: producer-consumer; mutual exclusion; atomic read/writes; semaphores; monitors; distributed algorithms and memory coherency; programming with threads; concurrency in popular programming languages and operating systems. Prerequisites: CSE 120. ", units: 4, acronym: 'CSE', number: '128'},
{name: "CSE 130. Programming\n\t\t  Languages: Principles and Paradigms (4)", description: "(Formerly CSE 173.) Introduction to programming languages and paradigms, the components that comprise them, and the principles of language design, all through the analysis and comparison of a variety of languages (e.g., Pascal, Ada, C++, PROLOG, ML.) Will involve programming in most languages studied. Prerequisites: CSE 12 and CSE 100 or Math 176, CSE 105 or Math 166.", units: 4, acronym: 'CSE', number: '130'},
{name: "CSE 131. Compiler Construction (4)", description: "(Formerly CSE 131B.) Introduction to the compilation of programming languages,\n\t\t\t\t  practice of lexical and syntactic analysis, symbol tables,\n\t\t\t\t  syntax-directed translation, type checking, code generation, optimization,\n\t\t\t\t  interpretation, and compiler structure. (Students may receive repeat credit\n\t\t\t\t  for CSE 131A and CSE 131B by completing CSE 131.) Prerequisites: CSE\n\t\t\t\t  100 or Math 176, CSE 105 or Math 166, CSE 110, and CSE 130. ", units: 4, acronym: 'CSE', number: '131'},
{name: "CSE 132A. Database System Principles (4)", description: "Basic concepts of databases, including data modeling, relational databases, query languages, optimization, dependencies, schema design, and concurrency control. Exposure to one or several commercial database systems. Advanced topics such as deductive and object-oriented databases, time allowing. Prerequisites: CSE 100 or Math 176. ", units: 4, acronym: 'CSE', number: '132a'},
{name: "CSE 132B. Database Systems Applications (4)", description: "Design of databases, transactions, use of trigger facilities and datablades. Performance measuring, organization of index structures. Prerequisites: CSE 132A or equivalent.", units: 4, acronym: 'CSE', number: '132b'},
{name: "CSE 134B. Web Client Languages (4)", description: "Design and implementation of interactive World Wide Web clients using helper applications and plug-ins. The main language covered will be Java. Prerequisites: CSE 100 or Math 176. Majors only. ", units: 4, acronym: 'CSE', number: '134b'},
{name: "CSE 135. Server-side Web Applications (4)", description: "Design and implementation of dynamic web-based\n\t\t\t\t  applications. Multi-tier architecture, scripting languages, SQL, XML, session\n\t\t\t\t  handling, nonbrowser clients, web services, and scalability, security,\n\t\t\t\t  and usability in the web context. Prerequisites: CSE\n\t\t\t\t  100 or Math 176. Majors only. ", units: 4, acronym: 'CSE', number: '135'},
{name: "CSE 136. Enterprise-class Web Applications (4)", description: "Design and implementation of large scale web-based\n\t\t\t\t  applications. Modeling organizational needs, design and revision management,\n\t\t\t\t  J2EE or similar software platforms, web and application server functionality,\n\t\t\t\t  reuse of object-oriented components, model-view-controller and other design\n\t\t\t\t  patterns, clustering, load-balancing, fault-tolerance, authentication,\n\t\t\t\t  usage accounting. Prerequisites: CSE 135.\t\t\t\t  ", units: 4, acronym: 'CSE', number: '136'},
{name: "CSE 140. Components\n\t\t  and Design Techniques for Digital Systems (4)", description: "(Formerly CSE 170A) Design of Boolean logic and finite state machines; two-level, multi-level combinational logic design, combinational modules and modular networks, Mealy and Moore machines, analysis and synthesis of canonical forms, sequential modules. Prerequisites: CSE 20 or Math 15A, and corequisite of CSE 140L.", units: 4, acronym: 'CSE', number: '140'},
{name: "CSE 140L. Digital Systems Laboratory (2)", description: "(Formerly CSE 175B) Implementation with computer-aided design tools for combinational logic minimization and state machine synthesis. Hardware construction of a small digital system. Prerequisites: CSE 20, CSE 30. CSE 140 must be taken concurrently. ", units: 2, acronym: 'CSE', number: '140l'},
{name: "CSE 141. Introduction to Computer Architecture (4)", description: "Introduction to computer architecture. Computer system design. Processor design. Control design. Memory systems. Prerequisites: CSE 140, CSE 140L, or consent of the instructor. CSE 141L should be taken concurrently. Majors only. ", units: 4, acronym: 'CSE', number: '141'},
{name: "CSE 141L. Project in Computer Architecture (2)", description: "Hands-on computer architecture project aiming to familiarize students with instruction set architecture, and design of process. Control and memory systems. Prerequisites: CSE 140, CSE 140L, or consent of the instructor. CSE 141 should be taken concurrently. Majors only. ", units: 2, acronym: 'CSE', number: '141l'},
{name: "CSE 143. Microelectronic System Design (4)", description: "VSLI process technologies; circuit characterization; logic design styles; clocking strategies; computer-aided design tools; subsystem design; design case studies. System design project from hardware description, logic synthesis, physical layout to design verification. Students may not receive credit for both CSE 143 and ECE 161B. Prerequisites: CSE 140 and CSE 141.\t\t\t\t", units: 4, acronym: 'CSE', number: '143'},
{name: "CSE 144. Computer-Aided Design of VLSI Circuits (4)", description: "Introduction to Computer-Aided Design. Placement, Assignment and Floor Planning Techniques. Routing. Symbolic Layout and Compaction. Module Generation and Silicon Compilation. Prerequisites: CSE 140 and CSE 140L.", units: 4, acronym: 'CSE', number: '144'},
{name: "CSE 145. Embedded System Design Project (4)", description: "Project class building an embedded computing system. Learn fundamental knowledge of microcontrollers, sensors, and actuators. Introduction to the hardware and software tools to build project in a team environment and end-to-end system building. Prerequisites: CSE 30.", units: 4, acronym: 'CSE', number: '145'},
{name: "CSE 146. Introduction to Reliable Hardware (4)", description: "Fault models and tests, combinational circuit test generation, fault collapsing, fault simulation, synchronous sequential circuit testing, functional testing, memory testing. Prerequisites: CSE 140 and CSE 140L, or consent of instructor. ", units: 4, acronym: 'CSE', number: '146'},
{name: "CSE 148. Advanced\n\t\t  Processor Architecture Design Project (4)", description: "Students will use hardware description language tools to add advanced architectural features to a basic processor design. These features may include pipelining, superscalar execution, branch prediction, and advanced cache features. Designs will be implemented in programmable logic devices. Prerequisites: CSE 141, CSE 141L, or consent of instructor. ", units: 4, acronym: 'CSE', number: '148'},
{name: "CSE 150. Introduction\n\t\t  to Artificial Intelligence: Search and Reasoning (4)", description: "Search algorithms including BFS, DFS, iterative deepening and A*, randomized search  algorithms including Walksat, syntax and semantics of first-order logic (FOL), knowledge representation in FOL including reasoning, basic reasoning with probabilities, basic Bayesian learning. Prerequisites: CSE 100 or Math 176 or consent of instructors. ", units: 4, acronym: 'CSE', number: '150'},
{name: "CSE 151. Introduction\n\t\t  to Artificial Intelligence: Statistical Approaches (4)", description: "Reasoning with probabilities, reasoning and learning with Bayesian networks, decision making under uncertainty, sequential decision making, statistical learning methods, and reinforcement learning. Prerequisites: CSE 100 or Math 176 or consent of instructor. ", units: 4, acronym: 'CSE', number: '151'},
{name: "CSE 152. Introduction to Computer Vision (4)", description: "The goal of computer vision is to compute scene and object properties from images and video. This introductory course includes feature detection, image segmentation, motion estimation, object recognition, and 3-D shape reconstruction through stereo, photometric stereo, and structure from motion. Prerequisites: Math 20F, CSE 100 or Math 176, CSE 101 or Math 188.", units: 4, acronym: 'CSE', number: '152'},
{name: "CSE 160. Introduction to Parallel Computing (4)", description: "Introduction to high performance parallel computing: parallel architecture, algorithms, software, and problem-solving techniques. Areas covered: Flynns\u{2019} taxonomy, processor-memory organizations, shared and nonshared memory models: message passing and multithreading, data parallelism; speedup, efficiency and Amdahl\u{2019}s law, communication and synchronization, isoefficiency and scalability. Assignments given to provide practical experience. Prerequisites: CSE 100 or Math 176. ", units: 4, acronym: 'CSE', number: '160'},
{name: "CSE 166. Image Processing (4)", description: "Principles of image formation, analysis, and representation. Image enhancement, restoration, and segmentation; stochastic image models. Filter design, sampling, Fourier and wavelet transforms. Selected applications in computer graphics and machine vision. Prerequisites: Math 20F, CSE 100 or Math 176. ", units: 4, acronym: 'CSE', number: '166'},
{name: "CSE 167. Computer Graphics (4)", description: "(Formerly CSE 177) Representation and manipulation of pictorial data. Two-dimensional and three-dimensional transformations, curves, surfaces. Projection, illumination, and shading models. Raster and vector graphic I/O devices; retained-mode and immediate-mode graphics software systems and applications. Prerequisites: Math 2EA/20F and CSE 100 or Math 176. ", units: 4, acronym: 'CSE', number: '167'},
{name: "CSE 168. Computer Graphics II: Rendering (4)", description: "Weekly programming assignments that will cover graphics rendering algorithms. During the course the students will learn about ray tracing, geometry, tessellation, acceleration structures, sampling, filtering, shading models, and advanced topics such as global illumination and programmable graphics hardware. Prerequisites: CSE 167 or concurrent enrollment.  ", units: 4, acronym: 'CSE', number: '168'},
{name: "CSE 169. Computer Animation (4)", description: "Advanced graphics focusing on the programming techniques involved in computer animation. Algo-rithms and approaches for both character animation and physically based animation. Particular subjects may include skeletons, skinning, key framing, facial animation, inverse kinematics, locomotion, motion capture, video game animation, particle systems, rigid bodies, clothing, and hair. Prerequisites: a good understanding of linear algebra. CSE 167 or consent of instructor. ", units: 4, acronym: 'CSE', number: '169'},
{name: "CSE 181. Molecular Sequence Analysis (4)", description: "This course covers the analysis of nucleic acid and protein sequences, with an emphasis on the application of algorithms to biological problems. Topics include sequence alignments, database searching, comparative genomics, and phylogenetic and clustering analyses. Pairwise alignment, multiple alignment, DNS sequencing, scoring functions, fast database search, comparative genomics, clustering, phylogenetic trees, gene finding/DNA statistics. Prerequisites: CSE 100 or Math 176, CSE 101 or Math 188, BIMM 100 or Chem 114D. Bioinformatics majors only. CSE 181 is cross-listed with BIMM 181 and BENG 181. ", units: 4, acronym: 'CSE', number: '181'},
{name: "CSE 182. Biological Databases (4)", description: "This course provides an introduction to the features of biological data, how that data are organized efficiently in databases, and how existing data resources can be utilized to solve a variety of biological problems. Relational databases, object oriented databases, ontologies, data modeling and description, survey of current biological database with respect to above, implementation of a database focused on a biological topic. Prerequisites: CSE 100 or Math 176. Bioinformatics majors only. CSE 182 is cross-listed with BIMM 182, Chem 182, and BENG 182. ", units: 4, acronym: 'CSE', number: '182'},
{name: "CSE 184. Computational Molecular Biology (4)", description: "This advanced course covers the application of machine learning and modeling techniques to biological systems. Topics include gene structure, recognition of DNA and protein sequence patterns, classification, and protein structure prediction. Pattern discovery, Hidden Markov models/support victor machines/neural network/profiles. Protein structure prediction, functional characterization or proteins, functional genomics/proteomics, metabolic pathways/gene networks. Prerequisites: BIMM 181 or BENG 181 or CSE 181, BIMM 182 or CSE 182 or CHEM 182. Bioinformatics majors only. CSE 184 is cross-listed with BIMM 184, BENG 184, and Chem 184. ", units: 4, acronym: 'CSE', number: '184'},
{name: "CSE 190. Topics\n\t\t  in Computer Science and Engineering (4)", description: "Topics of special interest in computer science and engineering. Topics may vary from quarter to quarter. May be repeated for credit with the consent of instructor. Prerequisites: consent of instructor. Department stamp required. ", units: 4, acronym: 'CSE', number: '190'},
{name: "CSE 191. Seminar in CSE (1\u{2013}4)", description: "A seminar course on topics of current interest. Students, as well as, the instructor will be actively involved in running the course/class. This course cannot be counted toward a technical elective. Prerequisites: consent of instructor. Department stamp required.  ", units: 4, acronym: 'CSE', number: '191'},
{name: "CSE 195. Teaching (4)", description: "Teaching and tutorial assistance in a CSE course under the supervision of the instructor. (P/NP grades only.) Prerequisites: consent of the department chair. Department stamp required. ", units: 4, acronym: 'CSE', number: '195'},
{name: "CSE 197. Field\n\t\t  Study in Computer Science and Engineering (4, 8, 12, or 16)", description: "Directed study and research at laboratories away from the campus. (P/NP grades only.) Prerequisites: consent of the instructor and approval of the department. Department stamp required. ", units: 6, acronym: 'CSE', number: '197'},
{name: "CSE 198. Directed Group Study (2 or 4)", description: "Computer science and engineering topics whose study involves reading and discussion by a small group of students under the supervision of a faculty member. (P/NP grades only.) Prerequisites: consent of the instructor. Department stamp required. ", units: 4, acronym: 'CSE', number: '198'},
{name: "CSE 199. Independent Study for Undergraduates (2 or 4)", description: "Independent reading or research by special arrangement with a faculty member. (P/NP grades only.) Prerequisites: consent of the instructor. Department stamp required. ", units: 4, acronym: 'CSE', number: '199'},
{name: "CSE 200. Computability and Complexity (4)", description: "Computability review, including halting problem, decidable sets, r.e. sets, many-one reductions; TIME(t(n)), SPACE(s(n)) and general relations between these classes; L, P, PSPACE, NP; NP\u{2014}completeness; hierarchy theorems; RP, BPP. Prerequisites: CSE 105 or equivalent. ", units: 4, acronym: 'CSE', number: '200'},
{name: "CSE 202. Algorithm Design and Analysis (4)", description: "The basic techniques for the design and analysis of algorithms. Divide-and-conquer, dynamic programming, data structures, graph search, algebraic problems, randomized algorithms, lower bounds, probabilistic analysis, parallel algorithms. Prerequisites: CSE 101 or equivalent. ", units: 4, acronym: 'CSE', number: '202'},
{name: "CSE 203A. Advanced Algorithms (4)", description: "Modern advances in design and analysis of algorithms. Exact syllabus varies. Topics include approximation, randomized algorithms, probabilistic analysis, heuristics, online algorithms, competitive analysis, models of memory hierarchy, parallel algorithms, number-theoretic algorithms, cryptanalysis, computational geometry, computational biology, network algorithms, VLSI CAD algorithms. Prerequisites: CSE 202. ", units: 4, acronym: 'CSE', number: '203a'},
{name: "CSE 204A. Combinatorial Optimization (4)", description: "Linear programming, simplex method, duality, and column generating technique. Integer programming introduced via the Knapsack problem. The periodic nature of all integer programs. Why the round-off technique cannot work in general. The solution of the Knapsack problem in polonominal time since nonbasic columns form a group. Prerequisites: CSE 202 or linear algebra or consent of instructor. ", units: 4, acronym: 'CSE', number: '204a'},
{name: "CSE 205A. Logic in Computer Science (4)", description: "(Formerly CSE 208D) Mathematical logic as a tool in computer science. Propositional logic, resolution, first-order logic, completeness and incompleteness theorems with computational viewpoint, finite model theory, descriptive complexity, logic programming, nonmonotonic reasoning, temporal logic. Applications to databases, automatic theorem proving, program verification, and distributed systems. Prerequisites: CSE 200 or consent of instructor. ", units: 4, acronym: 'CSE', number: '205a'},
{name: "CSE 206A. Lattice Algorithms and Applications (4)", description: "(Formerly CSE 207C) Introduction to the algorithmic theory of point lattices (aka algorithmic geometry of numbers), and some of its most important applications in cryptography and cryptanalysis. Topics usually include: LLL basis reduction algorithm, cryptanalysis of broadcast RSA, hardness of approximating lattice problems. Prerequisites: CSE 202, CSE 200, or concurrent. ", units: 4, acronym: 'CSE', number: '206a'},
{name: "CSE 207. Modern Cryptography (4)", description: "Private and public key cryptography, introduction to reduction based proofs of security, concrete security, block ciphers, pseudorandom functions and generators, symmetric encryption, asymmetric encryption, computational number theory, RSA and discrete log systems, message authentication, digital signatures, key distribution and key management. Prerequisites: CSE 202 or consent of instructor. ", units: 4, acronym: 'CSE', number: '207'},
{name: "CSE 207C. Lattices and Cryptology (4)", description: "Renumbered to CSE 206A (see above). ", units: 4, acronym: 'CSE', number: '207c'},
{name: "CSE 208. Advanced Cryptography (4)", description: "Zero-knowledge, secure computation, session-key distribution, protocols, electronic payment, one-way functions, trapdoor permutations, pseudorandom bit generators, hardcore bits. Prerequisites: CSE 202, CSE 200, and CSE 207 or consent of instructor. ", units: 4, acronym: 'CSE', number: '208'},
{name: "CSE 208D. Logic in Computer Science (4)", description: "Renumbered to CSE 205A (see above). ", units: 4, acronym: 'CSE', number: '208d'},
{name: "CSE 209A. Topics/Seminar in Algorithms, Complexity,\n\t\t\t\t  and Logic (1\u{2013}4)", description: "Topics of special interest in algorithms, complexity, and logic to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. Prerequisites: consent of instructor. ", units: 4, acronym: 'CSE', number: '209a'},
{name: "CSE 209B. Topics/Seminar in Cryptography (1\u{2013}4)", description: "Topics of special interest in cryptography to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. Prerequisites: consent of instructor. ", units: 4, acronym: 'CSE', number: '209b'},
{name: "CSE 210. Principles of Software Engineering (4)", description: "(Formerly CSE 264A.) General principles in modern software engineering. Both theoretical and practical topics are covered. Theoretical topics include proofs of correctness, programming language semantics, and theory of testing. Practical topics include structured programming, modularization techniques, design of languages for reliable programming, and software tools. Prerequisites: CSE 100, 131A, 120, or consent of instructor. ", units: 4, acronym: 'CSE', number: '210'},
{name: "CSE 211. Software Testing and Analysis (4)", description: "Survey of testing and analysis methods. Introduction to advanced topics in area as well as traditional production methods. Topics include inspections and reviews, formal analysis, verification and validation standards, nonstatistical testing, statistical-testing and reliability models, coverage methods, testing and analysis tools, and organization management and planning. Methods special to special development approaches such as object-oriented testing will also be described. Prerequisites: undergraduate major in computer science or extensive industrial experience. ", units: 4, acronym: 'CSE', number: '211'},
{name: "CSE 218. Advanced\n\t\t  Topics in Software Engineering (4)", description: "This course will cover a current topic in software engineering in depth. Topics in the past have included software tools, impacts of programming language design, and software system structure. (S/U grades permitted.) Prerequisites: none. ", units: 4, acronym: 'CSE', number: '218'},
{name: "CSE 221. Operating Systems (4)", description: "Operating system structures, concurrent computation models, scheduling, synchronization mechanisms, address spaces, memory management protection and security, buffering, streams, data-copying reduction techniques, file systems, naming, caching, disk organization, mapped files, remote file systems, case studies of major operating systems. Prerequisites: CSE 120 and 121, or consent of instructor. ", units: 4, acronym: 'CSE', number: '221'},
{name: "CSE 222. Communication Networks (4)", description: "Renumbered to CSE 222A (see below). ", units: 4, acronym: 'CSE', number: '222'},
{name: "CSE 222A. Computer Communication Networks (4)", description: "(Formerly CSE 222.) Computer communication network concepts, protocols, and architectures, with an emphasis on an analysis of algorithms, protocols, and design methodologies. Topics will include layering, error control, flow control, congestion control, switching and routing, quality of service management, mobility, naming, security, and selected contemporary topics. Prerequisites: CSE 123A or consent of instructor. ", units: 4, acronym: 'CSE', number: '-222a'},
{name: "CSE 222B. Internet Algorithmics (4)", description: "(Formerly CSE 228H.) Techniques for speeding up Internet implementations, including system restructuring, new algorithms, and hardware innovations. Topics include: models for protocols, systems and hardware; efficiency principles; applying these principles to deriving techniques for efficient implementation of common endnode and router functions. Prerequisites: CSE 123A or CSE 222A or consent of instructor. ", units: 4, acronym: 'CSE', number: '222a'},
{name: "CSE 223. Distributed Systems (4)", description: "Renumbered to CSE 223A (see below). ", units: 4, acronym: 'CSE', number: '222b'},
{name: "CSE 223A. Principles of Distributed Computing (4)", description: "(Formerly CSE 223.) Logical and physical time, snapshot protocols, failure models, replication strategies, consensus and reliable broadcast, self-stabilization, atomic commit. Prerequisites: CSE 221 or consent of instructor. ", units: 4, acronym: 'CSE', number: '223'},
{name: "CSE 223B. Distributed Computing and Systems (4)", description: "Efficient primitives for distributed operating systems and high-performance network servers, including concurrent and event-driven server architectures, remote procedure calls, and load shedding. Distributed naming, directory, and storage services, replication for fault tolerance, and security in distributed systems. Prerequisites: CSE 221, CSE 222A, or consent of instructor. ", units: 4, acronym: 'CSE', number: '223a'},
{name: "CSE 225. High Performance Distributed Computing (and Computational Grids) (4)", description: "Architecture of high performance distributed systems (e.g., frameworks and middleware). High performance distributed objects (DCOM, Corba, Java Beans) and networking with crosscut issues for performance, availability, and performance predictability. Scalable servers, metacomputing, and scientific computing. Prerequisites: CSE 121 and CSE 123A or consent of instructor. ", units: 4, acronym: 'CSE', number: '223b'},
{name: "CSE 226. Storage Systems (4)", description: "(Formerly CSE 228B.) Secondary and tertiary storage systems, optical and magnetic media, performance analysis, modeling, reliability, redundant arrays of inexpensive disks, striping, log and maximum distance separable data organizations, sparing. Prerequisites: CSE 221 or consent of instructor. ", units: 4, acronym: 'CSE', number: '225'},
{name: "CSE 227. Computer Security (4)", description: "Security and threat models, risk analysis, authentication and authorization, auditing, operating systems security, access control mechanisms, protection mechanisms, distributed systems/network security, security architecture, electronic commerce security mechanisms, security evaluation. Prerequisites: CSE 221 or consent of instructor. ", units: 4, acronym: 'CSE', number: '226'},
{name: "CSE 228B. Storage Systems (4)", description: "Renumbered to CSE 226 (see above). ", units: 4, acronym: 'CSE', number: '227'},
{name: "CSE 228H. Internet Algorithmics (4)", description: "Renumbered to CSE 222B (see above). ", units: 4, acronym: 'CSE', number: '228b'},
{name: "CSE 229A. Topics/Seminar in Computer Systems (1\u{2013}4)", description: "Discussion on problems of current research interest in computer systems. Possible areas of focus include: distributed computing, computational grid, operating systems, fault-tolerant computing, storage systems, system services for the World Wide Web. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. Prerequisites: consent of instructor. ", units: 4, acronym: 'CSE', number: '228h'},
{name: "CSE 229B. Topics/Seminar\n\t\t  in Networks and Communication (1\u{2013}4)", description: "Discussion on problems of current research interest in computer networks and communication. Possible areas of focus include: wide-area networking, wireless networks, the Internet, computational grid, operating systems, fault-tolerant computing, storage systems. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. Prerequisites: consent of instructor. ", units: 4, acronym: 'CSE', number: '229a'},
{name: "CSE 229C. Topics/Seminar in Computer Security (1\u{2013}4)", description: "Discussion on problems of current research interest in computer security. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. Prerequisites: consent of instructor. ", units: 4, acronym: 'CSE', number: '229b'},
{name: "CSE 230. Principles of Programming Languages (4)", description: "(Formerly CSE 273.) Functional versus imperative programming. Type systems and polymorphism; the ML language. Higher order functions, lazy evaluation. Abstract versus concrete syntax, structural and well-founded induction. The lambda calculus, reduction strategies, combinators. Denotational semantics, elementary domain theory. Prerequisites: CSE 130 or equivalent, or consent of instructor. ", units: 4, acronym: 'CSE', number: '229c'},
{name: "CSE 231. Advanced Compiler Design (4)", description: "(Formerly CSE 264C.) Advanced material in\n\t\t\t\t  programming languages and translator systems. Topics include compilers,\n\t\t\t\t  code optimization, and debugging interpreters. Prerequisites: CSE\n\t\t\t\t  100, 131A\u{2013}B, or consent of instructor. ", units: 4, acronym: 'CSE', number: '230'},
{name: "CSE 232. Principles of Database Systems (4)", description: "(Formerly CSE 264D.) Database models including relational, hierarchic, and network approaches. Implementation of databases including query languages and system architectures. Prerequisites: CSE 100 or consent of instructor. ", units: 4, acronym: 'CSE', number: '231'},
{name: "CSE 232B. Database System Implementation (4)", description: "A hands-on approach to the principles of databases implementation. Algebraic rewriters/optimizers, query processors, triggers. Beyond centralized relational databases. Prerequisites: CSE 232. ", units: 4, acronym: 'CSE', number: '232'},
{name: "CSE 233. Database Theory (4)", description: "Theory of databases. Theory of query languages, dependency theory, deductive databases, incomplete information, complex objects, object-oriented databases, and more. Connections to logic and complexity theory including finite model theory and descriptive complexity. Prerequisites: CSE 200. ", units: 4, acronym: 'CSE', number: '232b'},
{name: "CSE 237A. Introduction to Embedded Computing (4)", description: "Embedded system technologies including processors, DSP, memory, and software. System interfacing basics, communication strategies, sensors, and actuators. Mobile and wireless technology in embedded systems. Using predesigned hardware and software components. Design case studies in wireless, multimedia, and/or networking domains. Prerequisites: basic courses in digital hardware, algorithms and data structures, elementary calculus, and probability; or consent of instructor. ", units: 4, acronym: 'CSE', number: '233'},
{name: "CSE 237B. Software for Embedded Systems (4)", description: "Embedded computing elements, device interfaces,\n\t\t\t\t  time-critical IO handling. Embedded software design under size, performance,\n\t\t\t\t  and reliability constraints. Software timing and functional validation.\n\t\t\t\t  Programming methods and compilation for embeddable software. Embedded runtime\n\t\t\t\t  systems. Case studies of real-time software systems. Prerequisites: CSE\n\t\t\t\t  237A; or basic courses in programming, algorithms and data structures,\n\t\t\t\t  elementary calculus, discrete math, computer architecture; or consent of\n\t\t\t\t  instructor. ", units: 4, acronym: 'CSE', number: '237a'},
{name: "CSE 237C. Validation\n\t\t  and Testing of Embedded Systems (4)", description: "Embedded system building blocks including\n\t\t\t\t  IP cores. Cosimulation. Formal verification using model checking. Verification\n\t\t\t\t  environments. Test challenges in core integration: compliance, feature,\n\t\t\t\t  random, and collision testing. Core access and test integration. Interface-based\n\t\t\t\t  verification and standards. Prerequisites: CSE\n\t\t\t\t  237A; or basic courses in algorithms and data structures, elementary calculus,\n\t\t\t\t  discrete math, symbolic logic, computer architecture; or consent of instructor. ", units: 4, acronym: 'CSE', number: '237b'},
{name: "CSE 237D. Design\n\t\t  Automation and Prototyping for Embedded Systems (4)", description: "System representation and modeling. Abstract and language models. Simulation as a modeling activity. Computational and hw/sw system prototypes. System analysis using models. Constraint and interface modeling. Behavioral compilation and synthesis. Prerequisites: CSE 237A; or basic courses in digital logic design, algorithms and data structures, elementary calculus, discrete math, symbolic logic, computer architecture; or consent of instructor. ", units: 4, acronym: 'CSE', number: '237c'},
{name: "CSE 239A. Topics/Seminar in Databases (1\u{2013}4)", description: "Discussion on problems of current research\n\t\t\t\t  interest in databases. Possible areas of focus include: core database issues,\n\t\t\t\t  data management on the web, data integration, new database models and applications,\n\t\t\t\t  formal methods in databases. Topics to be presented by faculty and students\n\t\t\t\t  under faculty direction. Topics vary from quarter to quarter. May be repeated\n\t\t\t\t  for credit. Prerequisites: consent of instructor. ", units: 4, acronym: 'CSE', number: '237d'},
{name: "CSE 240. Principles in Computer Architecture I (4)", description: "Renumbered to CSE 240A (see below). ", units: 4, acronym: 'CSE', number: '239a'},
{name: "CSE 240A. Principles of Computer Architecture (4)", description: "(Formerly CSE 240.) This course will cover fundamental concepts in computer architecture. Topics include instruction set architecture, pipelining, pipeline hazards, bypassing, dynamic scheduling, branch prediction, superscalar issue, memory-hierarchy design, advanced cache architectures, and multiprocessor architecture issues. Prerequisites: CSE 141 or consent of instructor. ", units: 4, acronym: 'CSE', number: '240'},
{name: "CSE 240B. Parallel Computer Architecture (4)", description: "This course covers advanced topics in parallel computer architecture, including on-chip and off-chip interconnection networks, cache coherence, cache consistency, hardware multithreading, multi-core and tiled architectures. It incorporates the latest research and development on parallel architectures and compilation techniques for those architectures. CSE 240A recommended. Prerequisites: graduate standing. ", units: 4, acronym: 'CSE', number: '240a'},
{name: "CSE 240C. Advanced Microarchitecture (4)", description: "This course covers advanced topics in computer architecture. It incorporates the latest research and development on topics such as branch prediction, instruction-level parallelism, cache hierarchy design, speculative multithreading, reliable architectures, and power-management techniques. CSE 240A recommended. Prerequisites: graduate standing. ", units: 4, acronym: 'CSE', number: '240b'},
{name: "CSE 240D. Application Specific Processors (4)", description: "This course covers advanced topics in design concepts and implementation principles of application specific processors, including embedded system design principles and application specific processors, application specific instruction set processors, domain specific processor architectures, embedded memories and dynamically customizable processors. CSE 240A recommended. Prerequisites: graduate standing. ", units: 4, acronym: 'CSE', number: '240c'},
{name: "CSE 241A/ECE\n\t\t  260B. VLSI Integration of Computing Circuitry (4)", description: "VLSI integrated-circuit building blocks of computing systems, and their implementation. Computer-aided design and performance simulations, design exercises and projects. Devices, standard cells and interconnects, clocking, power/ground distribution, arithmetic modules, memories. Methodologies and tradeoffs in system implementation. Prerequisites: layout (CSE 165 or ECE 260A) and logic design (CSE 140 or ECE 111), or consent of instructor. ", units: 4, acronym: 'CSE', number: '240d'},
{name: "CSE 242A. Integrated Circuit Layout Automation (4)", description: "Couplings among timing, circuits and spatial embedding in nanometer-scale CMOS design. The role, and key problems, of physical layout in IC implementation. Example topics: RTL-to-GDSII methodologies, analyses and estimations, partitioning, floor planning, placement, routing, special net routing, cell generation, compaction. Prerequisites: CSE 241A or consent of instructor. ", units: 4, acronym: 'CSE', number: '241a'},
{name: "CSE 243A. Introduction\n\t\t  to Synthesis Methodologies in VLSI CAD (4)", description: "Hardware software co-design, architectural level synthesis, control synthesis and optimization, scheduling, binding, register and bus sharing, interconnect design, module selection, combinational logic optimization, state minimization, state encoding, and retiming. Prerequisites: CSE 241A or consent of instructor. ", units: 4, acronym: 'CSE', number: '242a'},
{name: "CSE 244A. VLSI Test (4)", description: "Design for test, testing economics, defects, failures and faults, fault models, fault simulation, automatic test pattern generation, functional testing, memory, PLA, FPGA, microprocessor test, and fault diagnosis. Prerequisites: CSE 241A or consent of instructor. ", units: 4, acronym: 'CSE', number: '243a'},
{name: "CSE 244B. Testable\n\t\t  and Fault Tolerant Hardware Design (4)", description: "Scan path design, BIST architectures, test point insertion, self-checking circuits, test and fault tolerance in architectural synthesis, reconfigurable fault tolerant hardware, and SOC test design. Prerequisites: CSE 244A or consent of instructor. ", units: 4, acronym: 'CSE', number: '244a'},
{name: "CSE 245. Computer\n\t\t  Aided Circuit Simulation and Verification (4)", description: "This course is about the computer algorithms, techniques, and theory used in the simulation and verification of electrical circuits. Prerequisites: CSE 241A or consent of instructor. ", units: 4, acronym: 'CSE', number: '244b'},
{name: "CSE 246. Computer\n\t\t  Arithmetic Algorithms and Hardware Design (4)", description: "Number representation, fixed point adders, subtracters, and multipliers; modified booth\u{2019}s recoding, high-radix multiplication, (non)restoring dividers, SRT division, high-radix dividers, division by convergence, square-rooting, floating point arithmetic, rounding schemes, errors and error control, and floating point adders, subtracters, multipliers, dividers. Prerequisites: CSE 241A or consent of instructor. ", units: 4, acronym: 'CSE', number: '245'},
{name: "CSE 247. Application Specific and Reconfigurable Computer Architecture (4)", description: "This course covers architecture concepts used to tailor processors to a specific application or sets of applications. It covers Field-Programmable Gate Arrays (FPGAs), various forms of Application Specific Integrated Circuit (ASIC) designs, Application Specific Integrated Processors (ASIP), and augmenting customizable VHDL cores. Prerequisites: CSE 241A or consent of instructor. ", units: 4, acronym: 'CSE', number: '246'},
{name: "CSE 248. Algorithmic and Optimization Foundations for VLSI CAD (4)", description: "Algorithmic techniques and optimization frameworks for large-scale, difficult optimizations. Primal-dual multicommodity flow approximations, approximations for geometric and graph Steiner formulations, continuous placement optimization, heuristics for Boolean satisfiability, multilevel methods, semidefinite programming, and application to other formulations (e.g., scheduling). Prerequisites: CSE 241A or CSE 242A or consent of instructor. ", units: 4, acronym: 'CSE', number: '247'},
{name: "CSE 249A. Topics/Seminar\n\t\t  in Computer Architecture (1\u{2013}4)", description: "Topics of special interest in computer architecture to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. Prerequisites: consent of instructor. ", units: 4, acronym: 'CSE', number: '248'},
{name: "CSE 249B. Topics/Seminar in VLSI (1\u{2013}4)", description: "Topics of special interest in VLSI to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. Prerequisites: consent of instructor. ", units: 4, acronym: 'CSE', number: '249a'},
{name: "CSE 249C. Topics/Seminar in CAD (1\u{2013}4)", description: "Topics of special interest in CAD to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. Prerequisites: consent of instructor. ", units: 4, acronym: 'CSE', number: '249b'},
{name: "CSE 250A. Artificial\n\t\t  Intelligence: Search and Reasoning (4)", description: "Heuristic search algorithms including A*, constraint satisfaction algorithms including DPLL, randomized search, knowledge representation in first-order logic (FOL), resolution methods for reasoning in FOL, reasoning about action and planning, reasoning with Bayesian networks. CSE 101 recommended. Prerequisites: graduate standing in CSE or consent of instructor.", units: 4, acronym: 'CSE', number: '249c'},
{name: "CSE 250B. Artificial Intelligence: Learning (4)", description: "Classifier learning including linear separators, decision trees, and nearest neighbors. Generalization and overfitting; design of learning experiments; the PAC model. Possible topics include ensemble methods, boosting, kernel methods, online learning, and reinforcement learning. Prerequisites: graduate standing or consent of instructor.", units: 4, acronym: 'CSE', number: '250a'},
{name: "CSE 252A. Computer Vision I (4)", description: "Comprehensive introduction to computer vision\n\t\t\t\t  providing broad coverage including low-level vision (image\n\t\t\t\t  formation, photometry, color, image feature detection), inferring 3-D properties\n\t\t\t\t  from images (shape-from shading, stereo vision, motion interpretation)\n\t\t\t\t  and object recognition. Companion to CSE 252B covering complementary topics. Prerequisites: Math\n\t\t\t\t  10D and Math 20A\u{2013}F or equivalent. ", units: 4, acronym: 'CSE', number: '250b'},
{name: "CSE 252B. Computer Vision II (4)", description: "Comprehensive introduction to computer vision\n\t\t\t\t  providing focused coverage of multiview geometry, structure\n\t\t\t\t  from motion, image segmentation, motion segmentation, texture analysis\n\t\t\t\t  and recognition, object detection, and image-based rendering. Companion\n\t\t\t\t  to CSE 252A covering complementary topics. Prerequisites: Math\n\t\t\t\t  10D and Math 20A\u{2013}F or equivalent. ", units: 4, acronym: 'CSE', number: '252a'},
{name: "CSE 252C. Selected Topics in Vision and Learning (1\u{2013}4)", description: "Selected topics in computer vision and statistical pattern recognition, with an emphasis on recent developments. Possible topics include: grouping and segmentation, object recognition and tracking, multiple view geometry, kernel-based methods, dimensionality reduction, and mixture models. Prerequisites: CSE 252 or equivalent and CSE 250B or equivalent. ", units: 4, acronym: 'CSE', number: '252b'},
{name: "CSE 254. Statistical Learning (4)", description: "Learning algorithms based on statistics. Possible topics include minimum-variance unbiased estimators, maximum likelihood estimation, likelihood ratio tests, resampling methods, linear logistic regression, feature selection, regularization, dimensionality reduction, manifold detection. An upper-division undergraduate course on probability and statistics such as Math 183 or 186, or any graduate course on statistics, pattern recognition, or machine learning is recommended. Prerequisites: graduate standing. ", units: 4, acronym: 'CSE', number: '252c'},
{name: "CSE 256/LING 256.\n\t\t  Statistical Natural Language Processing (4)", description: "Introduction to modern statistical approaches to natural language processing: part-of-speech tagging, word-sense disambiguation and parsing, using Markov models, hidden Markov models and probabilistic context-free grammars. Recommended: one of LIGN 165, LIGN 245, CSE 151, CSE 250A, CSE 254. Prerequisites: graduate standing or consent of instructor.", units: 4, acronym: 'CSE', number: '254'},
{name: "CSE 257. Computational Biology (4)", description: "Computational methods are indispensable to an understanding of the vast datasets emerging from human and other organisms\u{2019} genomes. This course surveys algorithms underlying genome analysis, sequence alignment, phylogenetic trees, protein folding, gene expression, metabolic pathways, and biological knowledge base design. Prerequisites: Pharm. 201 or consent of instructor. ", units: 4, acronym: 'CSE', number: '256'},
{name: "CSE 257B. Algorithms in Computational Biology (4)", description: "Renumbered to CSE 206B (see above). ", units: 4, acronym: 'CSE', number: '257'},
{name: "CSE 258A. Cognitive Modeling (4)", description: "Connectionist models and a sampling of other cognitive modeling techniques. Models of language processing, memory, sequential processes, and vision. Areas covered may vary depending on student and faculty interests. Can be repeated for credit. CSE 151 or CSE 250B or CSE 253 or CSE 254, or equivalent experience recommended. Prerequisites: graduate standing.", units: 4, acronym: 'CSE', number: '257b'},
{name: "CSE 259. Seminar in Artificial Intelligence (1)", description: "A weekly meeting featuring local (and occasional external) speakers discussing their current research in Artificial Intelligence Neural Networks, and Genetic Algorithms. (S/U grades only.) Prerequisites: none. ", units: 1, acronym: 'CSE', number: '258a'},
{name: "CSE 259C. Topics/Seminar in Machine Learning (1\u{2013}4)", description: "Topics of special interest in machine learning to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. Prerequisites: consent of instructor.", units: 4, acronym: 'CSE', number: '259'},
{name: "CSE 260. Parallel Computation (4)", description: "(Formerly CSE 274A.) This course provides an overview of parallel hardware, algorithms, models, and software. Topics include Flynn\u{2019}s taxonomy, interconnection networks, memory organization, a survey of commercially available multiprocessors, parallel algorithm paradigms and complexity criteria, parallel programming environments and tools for parallel debugging, language specification, mapping, performance, etc. Prerequisites: graduate standing or consent of instructor. ", units: 4, acronym: 'CSE', number: '259c'},
{name: "CSE 262. System\n\t\t  Support for Applications of Parallel Computation (4)", description: "This course will explore design of software support for applications of parallel computation. Topics include: programming languages, run time support, portability, and load balancing. The course will terminate in a project. Prerequisites: consent of instructor. ", units: 4, acronym: 'CSE', number: '260'},
{name: "CSE 271. User Interface\n\t\t  Design: Social and Technical Issues (4)", description: "Web technologies (HTML, Java, JavaScript, etc.) can quickly build superb new systems, as well as phenomenally ugly systems that still fully meet their performance and functional requirements. This course explores interface usability and representation issues, with some focus on hypermedia and cooperative work. Prerequisites: CSE 20, CSE 100, or equivalent. ", units: 4, acronym: 'CSE', number: '262'},
{name: "CSE 272. Advanced Image Synthesis (4)", description: "Computer graphics techniques for creating realistic images. Topics include ray tracing, global illumination, subsurface scattering, and participating media. CSE 168 or equivalent recommended.", units: 4, acronym: 'CSE', number: '271'},
{name: "CSE 274. Selected Topics in Graphics (2\u{2013}4)", description: "Selected topics in computer graphics, with an emphasis on recent developments. Possible topics include computer animation, shape modeling and analysis, image synthesis, appearance modeling, and real-time rendering. CSE 168 or CSE 169 recommended. Prerequisites: graduate standing or consent of instructor.", units: 4, acronym: 'CSE', number: '272'},
{name: "CSE 280A. Algorithms in Computational Biology (4)", description: "(Formerly CSE 206B.) The course focuses on algorithmic aspects of modern bioinformatics and covers the following topics: computational gene hunting, sequencing, DNA arrays, sequence comparison, pattern discovery in DNA, genome rearrangements, molecular evolution, computational proteomics, and others. Prerequisites: CSE 202 preferred or consent of instructor.", units: 4, acronym: 'CSE', number: '274'},
{name: "CSE 280B. Advanced\n\t\t  Topics in Computational Biology (4)", description: "The advanced topics include, but are not limited to: population genetics, pathways, RNA, database filtering, comparative genomics, and others. Students are expected to pick one of the topics for an intensive research project, and report on their findings at the end of the class. Prerequisites: CSE 280A preferred or consent of instructor.", units: 4, acronym: 'CSE', number: '280a'},
{name: "CSE 282/BENG 202. Bioinformatics II: Sequence and Structure Analysis\u{2014}Methods and Applications (4)", description: "(Formerly CSE 257A/BENG 202.) Introduction to methods for sequence analysis. Applications to genome and proteome sequences. Protein structure, sequence-structure analysis. Prerequisites: Pharm 201 or consent of instructor. ", units: 4, acronym: 'CSE', number: '280b'},
{name: "CSE 283/BENG 203.\n\t\t  Bioinformatics III: Functional Genomics (4)", description: "Annotating genomes, characterizing functional genes, profiling, reconstructing pathways. Prerequisites: Pharm 201, BENG 202/CSE 282 or consent of instructor. ", units: 4, acronym: 'CSE', number: '282'},
{name: "CSE 290. Seminar\n\t\t  in Computer Science and Engineering (1\u{2013}4)", description: "(Formerly CSE 280A.) A seminar course in which topics of special interest in computer science and engineering will be presented by staff members and graduate students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. (S/U grades only.) Prerequisites: consent of instructor. (Offered as faculty resources permit.) ", units: 4, acronym: 'CSE', number: '283'},
{name: "CSE 291. Topics\n\t\t  in Computer Science and Engineering (1\u{2013}8)", description: "(Formerly CSE 281A). Topics of interest in computer science and engineering. Topics may vary from quarter to quarter. May be repeated for credit with the consent of instructor. (S/U grades permitted.) Prerequisites: consent of instructor. (Offered as faculty resources permit.) ", units: 8, acronym: 'CSE', number: '290'},
{name: "CSE 292. Faculty Research Seminar (1)", description: "(Formerly CSE 282.) Computer science and engineering faculty will present one-hour seminars of the current research work in their areas of interest. Prerequisites: CSE graduate status. ", units: 1, acronym: 'CSE', number: '291'},
{name: "CSE 293. Special\n\t\t  Project in Computer Science and Engineering (1\u{2013}12)", description: "The student will conceive, design, and execute a project in computer science under the direction of a faculty member. The project will typically include a large programming or hardware design task, but other types of projects are possible. Prerequisites: CSE graduate student status. (CS 75, 76, 77, 78, 79, 80, 81) (S/U grades only.) ", units: 2, acronym: 'CSE', number: '292'},
{name: "CSE 294. Research Meeting in CSE (2)", description: "Advanced study and analysis of active research in computer science and computer engineering. Discussion of current research and literature in the research specialty of the staff member teaching the course. Prerequisites: consent of instructor. ", units: 2, acronym: 'CSE', number: '293'},
{name: "CSE 298. Independent Study (1\u{2013}16)", description: "Open to properly qualified graduate students who wish to pursue a problem through advanced study under the direction of a member of the staff. (S/U grades only.) Prerequisites: consent of instructor. ", units: 6, acronym: 'CSE', number: '294'},
{name: "CSE 299. Research (1\u{2013}16)", description: "Research. Prerequisites: consent of faculty. ", units: 6, acronym: 'CSE', number: '298'},
{name: "CSE 500. Teaching Assistantship (2\u{2013}4)", description: "A course in which teaching assistants are aided in learning proper teaching methods by means of supervision of their work by the faculty: handling of discussions, preparation and grading of examinations and other written exercises, and student relations. May be used to meet teaching experience requirement for candidates for the PhD degree. Number of units for credit depends on number of hours devoted to class or section assistance. Prerequisites: graduate standing and consent of instructor. ", units: 4, acronym: 'CSE', number: '299'},
{name: "CSE 501. Teaching Assistantship (2\u{2013}4)", description: "Renumbered to CSE 500 (see above). ", units: 4, acronym: 'CSE', number: '500'},
{name: "CSE 599. Teaching Methods in Computer Science (2)", description: "Training in teaching methods in the field of computer science. This course examines theoretical and practical communication and teaching techniques particularly appropriate to computer science. Prerequisites: consent of faculty.", units: 2, acronym: 'CSE', number: '501'}])
